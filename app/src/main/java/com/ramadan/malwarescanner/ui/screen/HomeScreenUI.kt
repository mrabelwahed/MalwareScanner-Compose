package com.ramadan.malwarescanner.ui.screen

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.ramadan.malwarescanner.R
import com.ramadan.malwarescanner.ui.theme.*

@Composable
fun HomeScreen() {
    Column() {
        Toolbar()
        MainCard()
        SearchBox()
        OverviewUI()
    }

}

@Composable
fun OverviewUI() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .padding(
                vertical = 26.dp, horizontal = 10.dp
            ),
        verticalAlignment = Alignment.CenterVertically,
        horizontalArrangement = Arrangement.SpaceBetween
    ) {
        Text(
            text = "Overview",
            color = TextColor,
            fontFamily = PpoPins,
            fontSize = 18.sp,
            fontWeight = FontWeight.SemiBold
        )

        Icon(
            painter = painterResource(id = R.drawable.ic_more), contentDescription = "" ,
        tint = TextColor ,
            modifier = Modifier.padding(end = 6.dp)
        )

    }
    Row {
        DataUICard(
            icon = R.drawable.ic_shield_cross,
            mainText = "Threat Activity",
            subText = "Total Count",
            data = "778",
            arrow = R.drawable.ic_arrow_top_right,
            status = "+1.2%",
            statusColor = PrimaryGreen
        )
        DataUICard(
            icon = R.drawable.ic_shield_cross,
            mainText = "Threat Activity",
            subText = "Total Count",
            data = "778",
            arrow = R.drawable.ic_arrow_top_right,
            status = "+1.2%",
            statusColor = PrimaryGreen
        )
    }

}

@Composable
fun DataUICard(
    modifier: Modifier = Modifier,
    icon: Int,
    mainText: String,
    subText: String,
    data: String,
    arrow: Int,
    status: String,
    statusColor: Color,

    ) {

    Card(
        modifier = Modifier
            .padding(horizontal = 4.dp)
            .width(154.dp)
            .clip(RoundedCornerShape(10.dp)),
        elevation = 0.dp
    ) {
        Column(modifier = Modifier.padding(10.dp)) {
            Row() {
                Icon(painter = painterResource(id = icon),
                    contentDescription = "",
                    Modifier
                        .clip(CircleShape)
                        .background(IconBackground)
                        .padding(8.dp))
                Column() {
                    Text(text = mainText,
                    fontSize = 12.sp,
                        color = Color.DarkGray,
                    fontWeight = FontWeight.Bold,
                    )
                    Text(text = subText,
                    fontSize = 10.sp,
                        color= Color.Gray,
                    fontWeight = FontWeight.Medium)
                }
            }
            Spacer(modifier = Modifier.height(8.dp))
            Row(modifier = Modifier.width(130.dp)) {
                Text(text = data,
                color= Color.Gray,
                fontSize = 34.sp,
                fontWeight = FontWeight.ExtraBold)
                Column() {
                    Icon(painter = painterResource(id = arrow), contentDescription = "" ,
                    tint = statusColor,
                        modifier = Modifier.size(20.dp)
                    )
                    Text(text = status , color = statusColor , fontSize = 12.sp , fontWeight = FontWeight.Bold)
                }
            }
        }
    }

}

@Composable
fun SearchBox() {
    var text by remember { mutableStateOf("") }
    TextField(
        value = text,
        onValueChange = { text = it },
        label = null,
        placeholder = {
            Text(
                text = "Search Something ...",
                color = Primary
            )
        },
        colors = TextFieldDefaults.textFieldColors(
            backgroundColor = Color.White,
            focusedLabelColor = Color.Transparent,
            unfocusedIndicatorColor = Color.Transparent
        ),
        trailingIcon = {
            Icon(
                painter = painterResource(id = R.drawable.ic_search),
                tint = Primary,
                contentDescription = "search icon",
                modifier = Modifier.size(20.dp)
            )
        },
        modifier = Modifier
            .fillMaxWidth()
            .padding(horizontal = 18.dp)
            .padding(top = 10.dp, bottom = 8.dp)
            .clip(RoundedCornerShape(10.dp))
    )
}

@Composable
fun Toolbar() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .wrapContentHeight(align = Alignment.Top)
            .padding(horizontal = 10.dp, vertical = 10.dp),
        horizontalArrangement = Arrangement.SpaceBetween,
        verticalAlignment = Alignment.CenterVertically
    ) {
        IconButton(onClick = {}) {
            Icon(
                painter = painterResource(id = R.drawable.ic_menu),
                contentDescription = "menu icon",
                tint = Primary,
                modifier = Modifier.size(28.dp)
            )

        }
        Text(
            text = "Protector",
            fontSize = 20.sp,
            fontWeight = FontWeight.SemiBold,
            fontFamily = ReemKufi,
            color = Primary
        )

        IconButton(onClick = {}) {
            Icon(
                painter = painterResource(id = R.drawable.ic_notification),
                contentDescription = "notification icon",
                tint = Primary,
                modifier = Modifier.size(28.dp)
            )

        }
    }

}

@Composable
fun MainCard() {
    Card(
        modifier = Modifier
            .fillMaxWidth()
            .padding(horizontal = 18.dp, vertical = 10.dp)
            .height(160.dp),
        backgroundColor = Primary,
        elevation = 0.dp,
        shape = RoundedCornerShape(10.dp)

    ) {
        Row(verticalAlignment = Alignment.CenterVertically) {
            Image(
                painter = painterResource(id = R.drawable.ic_shield),
                contentDescription = "shield image",
                modifier = Modifier.padding(20.dp), alignment = Alignment.CenterStart
            )
            Column(
                modifier = Modifier
                    .fillMaxHeight()
                    .padding(top = 10.dp)
            ) {
                Text(
                    text = "Summary Status",
                    fontFamily = PpoPins,
                    fontSize = 14.sp,
                    color = SecondaryText
                )
                Text(
                    text = "Scanning Needed!",
                    fontFamily = PpoPins,
                    fontSize = 16.sp,
                    color = HeadText
                )
                Spacer(modifier = Modifier.height(10.dp))
                Button(
                    onClick = { },
                    modifier = Modifier.clip(shape = RoundedCornerShape(10.dp)),
                    colors = ButtonDefaults.buttonColors(
                        backgroundColor = Secondary,
                        contentColor = HeadText
                    )
                ) {
                    Text(text = "Scan Now")
                }
            }
        }


    }
}

@Preview(showBackground = true)
@Composable
fun preview() {
    HomeScreen()
}

